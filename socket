//client
#include<stdio.h>
#include<stdlib.h>
#include<netdb.h>
#include<netinet/in.h>
#include<string.h>



int main()
{
    int sersock;
      struct sockaddr_in serv_addr, cli_addr;
    sersock =  socket(AF_INET, SOCK_STREAM, 0);
    if(sersock < 0)
    {
      printf("client socket doesn't creat\n");
      exit(0);
    }

     int portno = 5001;

     serv_addr.sin_family = AF_INET;
       serv_addr.sin_addr.s_addr = INADDR_ANY;
       serv_addr.sin_port = htons(portno);



        int ret = connect(sersock, (struct sockaddr*)&serv_addr, sizeof(serv_addr));
        if(ret < 0)
    {
        printf("connection failed\n");
        exit(0);
    }
    while(1)
    {
	int  num1,num2;
	struct NODE{
        int add;
        int sub;
        int mul;
        int div;
     };
	struct NODE res;
	//char out[20];
	char buf[20];
	printf("enter two numbers\n");
	scanf("%d %d",&num1,&num2);
	sprintf(buf,"%d:%d",num1,num2);	
        int size =send(sersock, buf, 20, 0);
	if(size< 0)
        {
            printf("data write failed\n");
            exit(0);
        }
        
	ret = recv(sersock, &res, sizeof(struct NODE),0);
	if(ret >0)
	{

	    printf("add=%d, sub=%d, mul=%d,div=%d \n", res.add,res.sub,res.mul,res.div);

	}
    }
        return 0;
  

}


//server start here

#include<stdio.h>
#include <stdlib.h>

#include <netdb.h>
#include <netinet/in.h>

#include <string.h>

int main()
{


  int sockfd, new_sockid;


   sockfd = socket(AF_INET, SOCK_STREAM, 0);

   struct sockaddr_in serv_addr, client_add;

  if(sockfd < 0)
  { 
    printf("socket is not created\n");
    exit(0);

  }

   int portno = 5001;
   
   serv_addr.sin_family = AF_INET;
   serv_addr.sin_addr.s_addr = INADDR_ANY;
   serv_addr.sin_port = htons(portno);
   
   int ret = bind(sockfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr));
   
   if(ret < 0)
   {
       printf("bind error \n");
       exit(1);
   }

   listen(sockfd, 5);

   int c_size = sizeof(client_add);

   new_sockid = accept(sockfd, (struct sockaddr*)&client_add, &c_size);

   if(new_sockid < 0)
   {
      printf("accept failed \n");
      exit(0);
   }
  

   while(1)
   {
     struct NODE{
	int add;
        int sub;
        int mul;
        int div;
     };
     struct NODE res;
     char buf[20];
     int num1 = 0,num2 = 0;
     recv(new_sockid, buf, 20, 0);
     printf("buf=[%s]###\n",buf);
     char* p = buf;
     int i =1;
     while(*p && *p != ':')
     {
	num1 = num1*i + (*p - '0');
	i*=10;
	p++;
     }
     p++;
     i = 1;
     while(*p && *p != ':')
     {
	num2 = num2*i + (*p - '0');
	i*=10;
        p++;
     }

     //char result[20];
     res.add = num1 + num2;
     res.sub = num1 - num2;
     res.mul = num1 * num2;
     res.div = num1 / num2;
     int ret = send(new_sockid, &res, sizeof(struct NODE), 0);
     printf("send result add= %d, sub = %d, mul = %d, div = %d \n",res.add,res.sub,res.mul,res.div );
   }
}
